---
import MainGridLayout from '@/layouts/MainGridLayout.astro'
import { getEntry, getCollection } from 'astro:content'
import PostCard from '@/components/PostCard.astro'
import { Icon } from 'astro-icon/components'
import I18nKey from '@i18n/i18nKey'
import { i18n } from '@i18n/translation'
import type { ProjectItem } from '@/types/config'
import type { CollectionEntry } from 'astro:content'

interface Props {
  item: ProjectItem;
  projectTitle: string;
}

export async function getStaticPaths() {
  try {
    const projectsPost = await getEntry('spec', 'projects');
    if (!projectsPost || !projectsPost.data.projects) {
      console.error('项目配置不存在');
      return [];
    }
    
    const allProjects = projectsPost.data.projects.flatMap(project => 
      project.items.map(item => ({
        params: { id: item.id },
        props: { 
          item,
          projectTitle: project.title
        }
      }))
    );
    
    return allProjects;
  } catch (error) {
    console.error('获取项目路径时出错:', error);
    return [];
  }
}

const { id } = Astro.params;
const { item, projectTitle } = Astro.props as Props;

// 获取相关文章
let relatedPosts: CollectionEntry<'posts'>[] = [];
try {
  if (item.posts && item.posts.length > 0) {
    const allPosts = await getCollection('posts', (post) => !post.data.draft);
    relatedPosts = allPosts.filter(post => 
      item.posts?.includes(post.slug)
    );
  }
} catch (error) {
  console.error('获取相关文章时出错:', error);
}

// 获取相关分类文章
let categoryPosts: CollectionEntry<'posts'>[] = [];
try {
  if (item.categories && item.categories.length > 0) {
    const allPosts = await getCollection('posts', (post) => !post.data.draft);
    categoryPosts = allPosts.filter(post => 
      post.data.category && item.categories?.includes(post.data.category)
    ).filter(post => !relatedPosts.some(p => p.id === post.id));
  }
} catch (error) {
  console.error('获取相关分类文章时出错:', error);
}

// 获取相关标签文章
let tagPosts: CollectionEntry<'posts'>[] = [];
try {
  if (item.tags && item.tags.length > 0) {
    const allPosts = await getCollection('posts', (post) => !post.data.draft);
    tagPosts = allPosts.filter(post => 
      post.data.tags && post.data.tags.some((tag: string) => item.tags?.includes(tag))
    ).filter(post => 
      !relatedPosts.some(p => p.id === post.id) && 
      !categoryPosts.some(p => p.id === post.id)
    );
  }
} catch (error) {
  console.error('获取相关标签文章时出错:', error);
}

// 处理文章数据以适配PostCard组件
const processPostForCard = (post: CollectionEntry<'posts'>) => {
  return {
    entry: post,
    title: post.data.title,
    url: `/posts/${post.slug}/`,
    published: post.data.published,
    updated: post.data.updated,
    tags: post.data.tags || [],
    category: post.data.category || '',
    image: post.data.image || '',
    description: post.data.description || '',
    draft: post.data.draft || false,
    style: '',
    pinned: post.data.pinned || false
  };
};
---

<MainGridLayout title={item.title} description={item.description}>
  <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
    <div class="card-base z-10 px-6 md:px-9 py-8 relative w-full">
      <!-- 面包屑导航 -->
      <div class="flex items-center gap-2 text-sm text-50 mb-8">
        <a href="/projects/" class="hover:text-[var(--primary)] transition-colors">
          <Icon name="mdi:bookmark-multiple-outline" class="text-lg inline-block align-text-bottom" />
          <span>{i18n(I18nKey.projects)}</span>
        </a>
        <Icon name="mdi:chevron-right" class="text-lg opacity-50" />
        <span class="opacity-70">{projectTitle}</span>
      </div>
      
      <!-- 项目标题和描述 -->
      <div class="mb-10 border-b border-zinc-200 dark:border-zinc-800 pb-6">
        <div class="flex items-center gap-3 mb-4">
          <Icon name="mdi:bookmark-outline" class="text-3xl text-[var(--primary)]" />
          <h1 class="text-3xl md:text-4xl font-bold text-[var(--primary)]">{item.title}</h1>
        </div>
        <p class="text-lg text-50 mb-4">{item.description}</p>
        
        <!-- 标签区域 -->
        {(item.tags && item.tags.length > 0) && (
          <div class="flex flex-wrap gap-2">
            {item.tags.map(tag => (
              <span class="px-3 py-1 text-xs rounded-full bg-[oklch(95%_0.03_var(--hue))] dark:bg-[oklch(30%_0.03_var(--hue))] text-[var(--primary)]">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
      
      <!-- 项目链接按钮 -->
      {item.url && (
        <div class="mb-10">
          <a 
            href={item.url} 
            target="_blank" 
            rel="noopener noreferrer" 
            class="inline-flex items-center gap-2 px-5 py-2.5 rounded-lg bg-[var(--primary)] text-white hover:opacity-90 transition-all duration-200"
          >
            <Icon name="mdi:link-variant" class="text-lg" />
            <span>访问项目</span>
            <Icon name="mdi:open-in-new" class="text-sm" />
          </a>
        </div>
      )}
      
      <!-- 文章计数统计 -->
      <div class="mb-10 grid grid-cols-1 md:grid-cols-3 gap-4">
        {relatedPosts.length > 0 && (
          <div class="bg-[oklch(98%_0.02_var(--hue))] dark:bg-[oklch(20%_0.02_var(--hue))] rounded-xl p-5 text-center">
            <div class="text-3xl font-bold text-[var(--primary)] mb-2">{relatedPosts.length}</div>
            <div class="text-sm text-50">精选文章</div>
          </div>
        )}
        {categoryPosts.length > 0 && (
          <div class="bg-[oklch(98%_0.02_var(--hue))] dark:bg-[oklch(20%_0.02_var(--hue))] rounded-xl p-5 text-center">
            <div class="text-3xl font-bold text-[var(--primary)] mb-2">{categoryPosts.length}</div>
            <div class="text-sm text-50">分类文章</div>
          </div>
        )}
        {tagPosts.length > 0 && (
          <div class="bg-[oklch(98%_0.02_var(--hue))] dark:bg-[oklch(20%_0.02_var(--hue))] rounded-xl p-5 text-center">
            <div class="text-3xl font-bold text-[var(--primary)] mb-2">{tagPosts.length}</div>
            <div class="text-sm text-50">标签文章</div>
          </div>
        )}
      </div>
      
      <!-- 相关文章部分 -->
      {relatedPosts.length > 0 && (
        <div class="mb-12">
          <div class="flex items-center gap-3 mb-6 border-l-4 border-[var(--primary)] pl-4">
            <h2 class="text-2xl font-bold">精选文章</h2>
          </div>
          <div class="grid grid-cols-1 gap-6">
            {relatedPosts.map(post => {
              const postData = processPostForCard(post);
              return (
                <PostCard 
                  entry={postData.entry}
                  title={postData.title}
                  url={postData.url}
                  published={postData.published}
                  updated={postData.updated}
                  tags={postData.tags}
                  category={postData.category}
                  image={postData.image}
                  description={postData.description}
                  draft={postData.draft}
                  style={postData.style}
                  pinned={postData.pinned}
                />
              );
            })}
          </div>
        </div>
      )}
      
      <!-- 相关分类文章部分 -->
      {categoryPosts.length > 0 && (
        <div class="mb-12">
          <div class="flex items-center gap-3 mb-6 border-l-4 border-[var(--primary)] pl-4">
            <h2 class="text-2xl font-bold">分类文章</h2>
          </div>
          <div class="grid grid-cols-1 gap-6">
            {categoryPosts.map(post => {
              const postData = processPostForCard(post);
              return (
                <PostCard 
                  entry={postData.entry}
                  title={postData.title}
                  url={postData.url}
                  published={postData.published}
                  updated={postData.updated}
                  tags={postData.tags}
                  category={postData.category}
                  image={postData.image}
                  description={postData.description}
                  draft={postData.draft}
                  style={postData.style}
                  pinned={postData.pinned}
                />
              );
            })}
          </div>
        </div>
      )}
      
      <!-- 相关标签文章部分 -->
      {tagPosts.length > 0 && (
        <div class="mb-8">
          <div class="flex items-center gap-3 mb-6 border-l-4 border-[var(--primary)] pl-4">
            <h2 class="text-2xl font-bold">标签文章</h2>
          </div>
          <div class="grid grid-cols-1 gap-6">
            {tagPosts.map(post => {
              const postData = processPostForCard(post);
              return (
                <PostCard 
                  entry={postData.entry}
                  title={postData.title}
                  url={postData.url}
                  published={postData.published}
                  updated={postData.updated}
                  tags={postData.tags}
                  category={postData.category}
                  image={postData.image}
                  description={postData.description}
                  draft={postData.draft}
                  style={postData.style}
                  pinned={postData.pinned}
                />
              );
            })}
          </div>
        </div>
      )}
      
      <!-- 返回按钮 -->
      <div class="mt-12 pt-6 border-t border-zinc-200 dark:border-zinc-800 text-center">
        <a 
          href="/projects/" 
          class="inline-flex items-center gap-2 px-4 py-2 rounded-lg bg-[oklch(95%_0.03_var(--hue))] dark:bg-[oklch(30%_0.03_var(--hue))] text-[var(--primary)] hover:opacity-90 transition-all duration-200"
        >
          <Icon name="mdi:arrow-left" class="text-lg" />
          <span>返回项目列表</span>
        </a>
      </div>
    </div>
  </div>
</MainGridLayout>
